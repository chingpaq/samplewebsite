{"version":3,"file":"static/js/193.c4228023.chunk.js","mappings":"kVACA,EAAuB,8BCqIvB,IAeA,GAAeA,EAAAA,EAAAA,KAfS,SAAAC,GACvB,IACsBC,EAClBD,EAAME,YADTC,kBAAqBF,SAEtBG,EAAkEJ,EAAMK,YACxE,MAAO,CAAEC,YADUF,EAAXE,YACcC,sBADoBH,EAArBG,sBACwBN,SAAAA,EAAUO,kBADMJ,EAAjBI,kBAE7C,IAE2B,SAAAC,GAC1B,MAAO,CACNC,sBAAuB,SAAAC,GAAK,OAAIF,GAASG,EAAAA,EAAAA,IAAeD,GAAO,EAC/DE,+BAAgC,SAAAZ,GAAQ,OAAIQ,GAASK,EAAAA,EAAAA,IAAqBb,GAAU,EACpFc,oBAAqB,SAAAC,GAAO,OAAIP,GAASQ,EAAAA,EAAAA,IAAkBD,GAAS,EAEtE,GACA,EArIA,SAAyBE,GAAQ,IAADC,EAAAC,EAAAC,EACvBb,EAA6CU,EAA7CV,kBAAmBF,EAA0BY,EAA1BZ,YAAaL,EAAaiB,EAAbjB,SACxCqB,GAAgCC,EAAAA,EAAAA,WAAS,GAAhCC,GAAqCC,EAAAA,EAAAA,GAAAH,EAAA,GAAlB,GAC5BI,GAA4BH,EAAAA,EAAAA,WAAQI,EAAAA,EAAAA,GAUhC,QAVgCR,EAC/BX,EAAkBoB,KAAI,SAAAC,GAAC,IAAAC,EAAA,MAAK,CAC/BC,GAAIF,EAAEE,GACNC,WAAYH,EAAEG,WACdC,UAAWJ,EAAEI,UACbC,MAAOL,EAAEK,MACTjC,SAAS,GAADkC,OAAgB,QAAhBL,EAAKD,EAAEO,iBAAS,IAAAN,OAAA,EAAXA,EAAaF,KAAI,SAAAS,GAAC,OAAIA,EAAEC,IAAI,IAAEC,KAAK,OAChDC,SAAUX,EAAEW,SACZC,MAAOZ,EAAEY,MACTC,SAAUb,EAAEa,SACZ,WAAE,IAAAvB,EAAAA,EAAI,KAVCwB,GAWPlB,EAAAA,EAAAA,GAAAC,EAAA,GAXsB,GAYhBY,EAAgDhC,EAAhDgC,KAAMM,EAA0CtC,EAA1CsC,cAAeC,EAA2BvC,EAA3BuC,aAAcC,EAAaxC,EAAbwC,SAC3CC,GAA8CxB,EAAAA,EAAAA,UAAS,CACtDe,MAAiB,OAAXhC,QAAW,IAAXA,GAAiB,QAANc,EAAXd,EAAagC,YAAI,IAAAlB,OAAN,EAAXA,EAAmB4B,QAAS,EAClCC,cAAyB,OAAX3C,QAAW,IAAXA,GAAyB,QAAde,EAAXf,EAAa2C,oBAAY,IAAA5B,OAAd,EAAXA,EAA2B2B,QAAS,EAClDJ,cAAeM,IAAO5C,EAAYsC,cAAe,cAAcO,KAAKD,MAASE,OAAO,eAAiB,EACrGP,aAAcQ,EAAAA,GAAAA,MAAuB,SAAAxB,GAAC,OAAIA,EAAEyB,QAAUhD,EAAYuC,YAAY,IAC9EC,SAAwB,OAAdS,EAAAA,SAAc,IAAdA,EAAAA,QAAc,EAAdA,EAAAA,GAAAA,MAAqB,SAAA1B,GAAC,OAAIA,EAAE2B,OAASlD,EAAYwC,QAAQ,MAElEW,GAAAhC,EAAAA,EAAAA,GAAAsB,EAAA,GAPKW,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAS1CG,GAA4BrC,EAAAA,EAAAA,UAAS,IAA9BsC,GAAiCpC,EAAAA,EAAAA,GAAAmC,EAAA,GAAhB,GACxBE,GAAuCvC,EAAAA,EAAAA,UAAS,CAC/Ce,KAAM,GACNW,aAAc,GACdL,cAAe,GACfC,aAAc,GACdC,SAAU,KACTiB,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GANKE,EAAWD,EAAA,GAAEE,EAAeF,EAAA,IAQnCG,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,MACEC,MAAKC,EAAAA,EAAAA,GAAK,IACVC,UAAU,CACVC,KAAM,SAAAC,GACL7B,GAAehB,EAAAA,EAAAA,GAAU,OAAJ6C,QAAI,IAAJA,EAAAA,EAAQ,IAC9B,EACAC,MAAO,SAAAA,GACNZ,EAAkBY,EAAMD,KACzB,EACAE,SAAU,WAAO,GAEpB,GAAG,IACH,IAAMC,GAAmBC,EAAAA,EAAAA,cAAY,WAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1ChB,EAAgB,CAAE3B,KAAM,GAAIW,aAAc,GAAIL,cAAe,GAAIC,aAAc,GAAIC,SAAU,GAAIoC,UAAW,KAC5G,IAAIC,GAAY,EA6BhB,OA3Be,OAAX7E,QAAW,IAAXA,GAAiB,QAANuE,EAAXvE,EAAagC,YAAI,IAAAuC,OAAN,EAAXA,EAAmB7B,QAAS,IAC/BiB,GAAgB,SAAAmB,GAAC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAC,IAAE9C,KAAM,gDAA8C,IAClF6C,GAAY,IAEE,OAAX7E,QAAW,IAAXA,GAAyB,QAAdwE,EAAXxE,EAAa2C,oBAAY,IAAA6B,OAAd,EAAXA,EAA2B9B,QAAS,IACvCiB,GAAgB,SAAAmB,GAAC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAC,IAAEnC,aAAc,wDAAsD,IAClGkC,GAAY,GAETjC,IAAO5C,EAAYsC,cAAe,cAAcO,KAAKD,MAASE,OAAO,eAAiB,IACzFa,GAAgB,SAAAmB,GAAC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAC,IAAExC,cAAe,+CAA6C,IAC1FuC,GAAY,KAEE,OAAX7E,QAAW,IAAXA,GAAyB,QAAdyE,EAAXzE,EAAauC,oBAAY,IAAAkC,OAAd,EAAXA,EAA2BO,WAAWtC,QAAS,IAAMK,EAAAA,GAAAA,MAAuB,SAAAxB,GAAC,OAAIA,EAAEyB,QAAUhD,EAAYuC,YAAY,OACxHoB,GAAgB,SAAAmB,GAAC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAC,IAAEvC,aAAa,mDAADV,OAAgE,OAAX7B,QAAW,IAAXA,OAAW,EAAXA,EAAauC,aAAY,2CAAwC,IAChKsC,GAAY,KAEE,OAAX7E,QAAW,IAAXA,GAAqB,QAAV0E,EAAX1E,EAAawC,gBAAQ,IAAAkC,OAAV,EAAXA,EAAuBhC,QAAS,GAAoB,OAAdO,EAAAA,SAAc,IAAdA,EAAAA,KAAAA,EAAAA,GAAAA,MAAqB,SAAA1B,GAAC,OAAIA,EAAE2B,OAASlD,EAAYwC,QAAQ,OAClGmB,GAAgB,SAAAmB,GAAC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAC,IAAEtC,SAAU,qCAAmC,IAC3EqC,GAAY,IAEE,OAAX7E,QAAW,IAAXA,GAAiB,QAAN2E,EAAX3E,EAAagC,YAAI,IAAA2C,OAAN,EAAXA,EAAmBjC,QAAS,KACvB,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,QAAS,EAClBxB,GAAoB,GAEpBA,GAAoB,IAGf2D,CACR,GAAG,CAAC7E,EAAasC,EAAeC,EAAcC,EAAUY,IAgCxD,OA9BAQ,EAAAA,EAAAA,YAAU,WACTR,EAAgBZ,UAAY6B,GAC7B,GAAG,CAACrE,EAAaL,IA6BhBsF,EAAAA,cAAA,OAAKxD,GAAG,mBAAmByD,UAAWC,GACrCF,EAAAA,cAACG,EAAAA,GAAiB,CAACC,cAAY,EAACC,cAAYP,EAAAA,EAAAA,GAAA,GAAOrB,GAAe6B,mBA5B1C,SAAAC,IACzBC,EAAAA,EAAAA,IAAkBD,GAChB1B,MAAK4B,EAAAA,EAAAA,MACL1B,UAAU,CACVG,MAAO,SAAAA,GACN,IAAMwB,EAAc,CAAE3D,KAAM,GAAIW,aAAc,GAAIL,cAAe,GAAIC,aAAc,GAAIC,SAAU,IAC7F2B,EAAMD,KAAK0B,OAAO5D,OACrB2D,EAAY3D,KAAOmC,EAAMD,KAAK0B,OAAO5D,KAAK,IAEvCmC,EAAMD,KAAK0B,OAAOjD,eACrBgD,EAAYhD,aAAewB,EAAMD,KAAK0B,OAAOjD,aAAa,IAEvDwB,EAAMD,KAAK0B,OAAOtD,gBACrBqD,EAAYrD,cAAgB6B,EAAMD,KAAK0B,OAAOtD,cAAc,IAEzD6B,EAAMD,KAAK0B,OAAOrD,eACrBoD,EAAYpD,aAAe4B,EAAMD,KAAK0B,OAAOrD,aAAa,IAEvD4B,EAAMD,KAAK0B,OAAOpD,WACrBmD,EAAYnD,SAAW2B,EAAMD,KAAK0B,OAAOpD,SAAS,IAEnDmB,GAAgB,SAAAmB,GAAC,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAMa,EAAW,GAC7C,GAEH,EAI2GtC,mBAAoBA,IAGhI,G","sources":["webpack://flowhero/./src/appFiles/components/TopBar/CompanySettings/CompanySettings.module.scss?c634","appFiles/components/TopBar/CompanySettings/CompanySettings.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"host\":\"CompanySettings_host__BUW5K\",\"labeledContainerLabel\":\"CompanySettings_labeledContainerLabel__-BJE5\",\"label\":\"CompanySettings_label__KJjqm\",\"userslistContainer\":\"CompanySettings_userslistContainer__AeiAs\",\"companyEmployeesContainer\":\"CompanySettings_companyEmployeesContainer__QBao2\"};","import moment from 'moment';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { first } from 'rxjs/operators';\nimport 'react-tabs/style/react-tabs.css';\nimport { take } from 'rxjs/operators';\nimport { setAuthenticatedUser } from '../../../reduxStore/actions/authActions';\nimport { setCompanyData } from '../../../reduxStore/actions/flowActions';\nimport { tutorialModalOpen } from '../../../reduxStore/actions/modalsActions';\nimport { getAllUsers } from '../../../services/user.service';\nimport { setCompanyDetails } from '../../../services/company.service';\nimport { industryFields, numberOfEmployees } from '../../../shared/utility';\nimport { CompanyDataUpdate } from '../../common';\n\nimport cls from './CompanySettings.module.scss';\n\nfunction CompanySettings(props) {\n\tconst { companyUsersArray, companyData, position } = props;\n\tconst [, setContinueDisabled] = useState(true);\n\tconst [, setCompanyUsers] = useState([\n\t\t...(companyUsersArray.map(i => ({\n\t\t\tid: i.id,\n\t\t\tfirst_name: i.first_name,\n\t\t\tlast_name: i.last_name,\n\t\t\temail: i.email,\n\t\t\tposition: `${i.positions?.map(u => u.name).join(', ')}`,\n\t\t\tis_admin: i.is_admin,\n\t\t\tphoto: i.photo,\n\t\t\ttimezone: i.timezone,\n\t\t})) ?? []),\n\t]);\n\tconst { name, founding_date, employees_no, industry } = companyData;\n\tconst [elementsTouched, setElementsTouched] = useState({\n\t\tname: companyData?.name?.length > 2,\n\t\tdisplay_name: companyData?.display_name?.length > 2,\n\t\tfounding_date: moment(companyData.founding_date, 'YYYY-MM-DD').diff(moment().format('YYYY-MM-DD')) < 0,\n\t\temployees_no: numberOfEmployees.some(i => i.value === companyData.employees_no),\n\t\tindustry: industryFields?.some(i => i.label == companyData.industry),\n\n\t});\n\n\tconst [setUsers_ApiError] = useState('');\n\tconst [fieldErrors, setFieldsErrors] = useState({\n\t\tname: '',\n\t\tdisplay_name: '',\n\t\tfounding_date: '',\n\t\temployees_no: '',\n\t\tindustry: '',\n\t});\n\n\tuseEffect(() => {\n\t\tgetAllUsers()\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe({\n\t\t\t\tnext: data => {\n\t\t\t\t\tsetCompanyUsers([...(data ?? [])]);\n\t\t\t\t},\n\t\t\t\terror: error => {\n\t\t\t\t\tsetUsers_ApiError(error.data);\n\t\t\t\t},\n\t\t\t\tcomplete: () => {},\n\t\t\t});\n\t}, []);\n\tconst isInvalidPayload = useCallback(() => {\n\t\tsetFieldsErrors({ name: '', display_name: '', founding_date: '', employees_no: '', industry: '', misc_info: '' });\n\t\tlet isInvalid = false;\n\n\t\tif (companyData?.name?.length < 2) {\n\t\t\tsetFieldsErrors(c => ({ ...c, name: 'Company name must have at least 2 characters' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.display_name?.length < 2) {\n\t\t\tsetFieldsErrors(c => ({ ...c, display_name: 'Company display name must have at least 2 characters' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (moment(companyData.founding_date, 'YYYY-MM-DD').diff(moment().format('YYYY-MM-DD')) > 0) {\n\t\t\tsetFieldsErrors(c => ({ ...c, founding_date: \"Company's founding date is not a valid date\" }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.employees_no?.toString().length < 3 || !numberOfEmployees.some(i => i.value === companyData.employees_no)) {\n\t\t\tsetFieldsErrors(c => ({ ...c, employees_no: `Employees' number is not valid. \\nStored value (${companyData?.employees_no}) is not matching any selectable range` }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.industry?.length < 3 || !industryFields?.some(i => i.label == companyData.industry)) {\n\t\t\tsetFieldsErrors(c => ({ ...c, industry: 'Industry field entry is not valid' }));\n\t\t\tisInvalid = true;\n\t\t}\n\t\tif (companyData?.name?.length > 0) {\n\t\t\tif (name?.length > 0) {\n\t\t\t\tsetContinueDisabled(false);\n\t\t\t} else {\n\t\t\t\tsetContinueDisabled(true);\n\t\t\t}\n\t\t}\n\t\treturn isInvalid;\n\t}, [companyData, founding_date, employees_no, industry, elementsTouched]);\n\n\tuseEffect(() => {\n\t\telementsTouched.industry && isInvalidPayload();\n\t}, [companyData, position]);\n\n\tconst updateCompanyData = companyPayload => {\n\t\tsetCompanyDetails(companyPayload)\n\t\t\t.pipe(first())\n\t\t\t.subscribe({\n\t\t\t\terror: error => {\n\t\t\t\t\tconst foundErrors = { name: '', display_name: '', founding_date: '', employees_no: '', industry: '' };\n\t\t\t\t\tif (error.data.errors.name) {\n\t\t\t\t\t\tfoundErrors.name = error.data.errors.name[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.display_name) {\n\t\t\t\t\t\tfoundErrors.display_name = error.data.errors.display_name[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.founding_date) {\n\t\t\t\t\t\tfoundErrors.founding_date = error.data.errors.founding_date[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.employees_no) {\n\t\t\t\t\t\tfoundErrors.employees_no = error.data.errors.employees_no[0];\n\t\t\t\t\t}\n\t\t\t\t\tif (error.data.errors.industry) {\n\t\t\t\t\t\tfoundErrors.industry = error.data.errors.industry[0];\n\t\t\t\t\t}\n\t\t\t\t\tsetFieldsErrors(c => ({ ...c, ...foundErrors }));\n\t\t\t\t},\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div id=\"company-settings\" className={cls.host}>\n\t\t\t<CompanyDataUpdate datePickerRC feValidation={{ ...fieldErrors }} sendCompanyDetails={updateCompanyData} setElementsTouched={setElementsTouched} />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = store => {\n\tconst {\n\t\tauthenticatedUser: { position },\n\t} = store.authReducer;\n\tconst { companyData, companyPositionsArray, companyUsersArray } = store.flowReducer;\n\treturn { companyData, companyPositionsArray, position, companyUsersArray };\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonSetCompanyDataField: field => dispatch(setCompanyData(field)),\n\t\tonSetAuthenticatedUserPosition: position => dispatch(setAuthenticatedUser(position)),\n\t\tonTutorialModalOpen: options => dispatch(tutorialModalOpen(options)),\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanySettings);\n"],"names":["connect","store","position","authReducer","authenticatedUser","_store$flowReducer","flowReducer","companyData","companyPositionsArray","companyUsersArray","dispatch","onSetCompanyDataField","field","setCompanyData","onSetAuthenticatedUserPosition","setAuthenticatedUser","onTutorialModalOpen","options","tutorialModalOpen","props","_companyUsersArray$ma","_companyData$name","_companyData$display_","_useState","useState","setContinueDisabled","_slicedToArray","_useState3","_toConsumableArray","map","i","_i$positions","id","first_name","last_name","email","concat","positions","u","name","join","is_admin","photo","timezone","setCompanyUsers","founding_date","employees_no","industry","_useState5","length","display_name","moment","diff","format","numberOfEmployees","value","industryFields","label","_useState6","elementsTouched","setElementsTouched","_useState7","setUsers_ApiError","_useState9","_useState10","fieldErrors","setFieldsErrors","useEffect","getAllUsers","pipe","take","subscribe","next","data","error","complete","isInvalidPayload","useCallback","_companyData$name2","_companyData$display_2","_companyData$employee","_companyData$industry","_companyData$name3","misc_info","isInvalid","c","_objectSpread","toString","React","className","cls","CompanyDataUpdate","datePickerRC","feValidation","sendCompanyDetails","companyPayload","setCompanyDetails","first","foundErrors","errors"],"sourceRoot":""}