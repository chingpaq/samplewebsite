{"version":3,"file":"static/js/807.c8a268b3.chunk.js","mappings":"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","sources":["webpack://flowhero/./src/appFiles/components/Auth/Login.module.scss?947f","appFiles/hooks/useValidation.ts","appFiles/components/Auth/LoginForm/FormElements/PasswordTextField.tsx","webpack://flowhero/./src/appFiles/components/Auth/LoginForm/LoginForm.module.scss?71be","appFiles/components/Auth/LoginForm/LoginForm.tsx","appFiles/components/Auth/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"host\":\"Login_host__HJ5T9\",\"firstContainer\":\"Login_firstContainer__kfGLU\",\"headerTopBarContainer\":\"Login_headerTopBarContainer__QWz8Y\",\"firstContainerContent\":\"Login_firstContainerContent__wbbdK\",\"logoWrapper\":\"Login_logoWrapper__xOqDN\",\"processmakerLogo\":\"Login_processmakerLogo__DGHzj\",\"header2\":\"Login_header2__tfUwR\",\"recoverPasswordButton\":\"Login_recoverPasswordButton__FUuDW\",\"secondContainer\":\"Login_secondContainer__BFYgV\",\"bottomButtonsContainer\":\"Login_bottomButtonsContainer__7NrxO\",\"headerTopBar\":\"Login_headerTopBar__RSolU\",\"logoUrlImg\":\"Login_logoUrlImg__UaUon\",\"centerDiv\":\"Login_centerDiv__le4iU\",\"logoUrlImgMobile\":\"Login_logoUrlImgMobile__gvaUr\"};","import * as yup from 'yup';\nimport yupPassword from 'yup-password';\nimport { useMemo } from 'react';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\n\nyupPassword(yup);\nconst regSpecial = /[^A-Za-z0-9]/;\nconst regLower = /[a-z]/;\nconst regUpper = /[A-Z]/;\nconst regNumber = /[0-9]/;\nexport const allRegs: RegExp[] = [regSpecial, regLower, regUpper, regNumber];\n\nexport const useValidation = () => {\n\treturn useMemo(() => {\n\t\treturn {\n\t\t\tyup,\n\t\t\tschemas: {\n\t\t\t\temail: yup.string().min(6, 'Username must have at least 8 characters'),\n\t\t\t\tpassword: yup.string().min(8, 'Password must have at least 8 characters'),\n\t\t\t\t\n\t\t\t\tpasswordRepeat: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.oneOf([yup.ref('password'), null], 'Passwords does not match')\n\t\t\t\t\t.required('Password repeat is required'),\n\t\t\t\twebsite: yup.string().url(),\n\t\t\t\tphoneNumber: yup.string().test({\n\t\t\t\t\tname: 'phone-pattern',\n\t\t\t\t\tmessage: 'Not a valid phone number',\n\t\t\t\t\ttest: (value = '') => value == '' || isValidPhoneNumber(value),\n\t\t\t\t}),\n\t\t\t\tmobilePhoneNumber: yup.string().test({\n\t\t\t\t\tname: 'mobile-phone-pattern',\n\t\t\t\t\tmessage: 'Not a valid mobile phone number',\n\t\t\t\t\ttest: (value = '') => value == '' || isValidPhoneNumber(value),\n\t\t\t\t}),\n\t\t\t\temployerName: yup.string().required('Employer name is required'),\n\t\t\t},\n\t\t};\n\t}, []);\n};\n","import { ComponentProps, forwardRef, useState } from 'react';\nimport TextField, { UserTextField } from './TextField';\n\ntype PasswordTextFieldProps = Omit<ComponentProps<typeof TextField>, 'icon' | 'type'>;\n\n/**\n * Same as `TextField` Component but with special password related features.\n * Shows an Icon at the end of the input to toggle if password is hidden or not.\n * @returns\n */\nconst PasswordTextField = forwardRef<HTMLInputElement, PasswordTextFieldProps>((props, ref) => {\n\tconst [showPassword, setShowPassword] = useState(false);\n\n\treturn <UserTextField {...props} ref={ref} type={showPassword ? 'text' : 'password'} rightButtonLabel={showPassword ? 'Hide' : 'Show'} rightButtonAction={() => setShowPassword(c => !c)} rightButtonClass={''} />;\n});\n\nexport default PasswordTextField;\n","// extracted by mini-css-extract-plugin\nexport default {\"host\":\"LoginForm_host__UvJwq\",\"title\":\"LoginForm_title__9p60B\",\"text\":\"LoginForm_text__yMnPH\",\"row\":\"LoginForm_row__9D3he\",\"buttons\":\"LoginForm_buttons__spuMH\",\"checkbox\":\"LoginForm_checkbox__d1y1-\",\"checkboxLabel\":\"LoginForm_checkboxLabel__vx8px\",\"signInButton\":\"LoginForm_signInButton__VPwbB\",\"errorMessage\":\"LoginForm_errorMessage__vGOop\",\"recoverPasswordButton\":\"LoginForm_recoverPasswordButton__fDOss\",\"recoverPassword\":\"LoginForm_recoverPassword__Cwkby\"};","\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport React, { ComponentProps, memo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { first, take } from 'rxjs/operators';\nimport { useValidation } from '../../../hooks/useValidation';\nimport { setOnBoardingComplete, setShowMenu } from '../../../reduxStore/actions/flowActions';\nimport { setIsOnboarding, setOnBoardingModalsVisibility, setOnBoardingVisible } from '../../../reduxStore/actions/modalsActions';\nimport type { StoreType } from '../../../reduxStore/store';\nimport { userLogin } from '../../../services/auth.service';\nimport { Button } from '../../common';\nimport { Checkbox } from './FormElements/Checkbox';\nimport PasswordTextField from './FormElements/PasswordTextField';\nimport TextField, { ErrorMessage, UserTextField } from './FormElements/TextField';\nimport cls from './LoginForm.module.scss';\nimport { isMobile } from 'react-device-detect';\nimport { APP_NAME } from '../../../shared/utility';\n\nconst accessRestrictedMessage = `This company do not have onboard required data yet!\\nPlease contact comapny admin.\\nBasic company information must be enroled\\nBefore you will be granted access to ${APP_NAME}`;\ntype FormType = {\n\temail: string;\n\tpassword: string;\n\trememberMe?: boolean;\n};\n\nexport type LoginFormProps = {\n\tclassName: string;\n\tonLoginSuccess?: (data:any) => void;\n\tonResetPassword?: () => void;\n} & ComponentProps<'form'>;\n\nexport const LoginForm = memo((props: LoginFormProps) => {\n\tconst { onLoginSuccess, className, onResetPassword } = props;\n\tconst dispatch = useDispatch();\n\tconst { rememberMe } = useSelector((reduxStore: StoreType) => reduxStore.authReducer.sessionSettings);\n\tconst [loading, setLoading] = useState(false);\n\tconst [responseError, setResponseError] = useState('');\n\tconst { schemas, yup } = useValidation();\n\tconst {\n\t\tregister,\n\t\t\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t\tgetValues,\n\t} = useForm<FormType>({\n\t\tmode: 'onSubmit',\n\t\tcriteriaMode: 'firstError',\n\t\tresolver: yupResolver(\n\t\t\tyup.object().shape({\n\t\t\t\temail: schemas.email,\n\t\t\t\tpassword: schemas.password,\n\t\t\t})\n\t\t),\n\t});\n\n\tconst onSubmit = (_data: FormType) => {\n\t\tsetResponseError('');\n\t\tsetLoading(true);\n\t\tconst { email, password, rememberMe } = getValues();\n\t\tuserLogin({ email: email, password: password, rememberMe: rememberMe })\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe({\n\t\t\t\tnext: data => {\n\t\t\t\t\tconst { is_admin, onboarding_status } = data;\n\n\t\t\t\t\tif (onboarding_status === false) {\n\t\t\t\t\t\tif (is_admin === true) {\n\t\t\t\t\t\t\tdispatch(setOnBoardingVisible(true));\n\t\t\t\t\t\t\tdispatch(setIsOnboarding(true));\n\t\t\t\t\t\t\tdispatch(setOnBoardingModalsVisibility({ firstModalVisible: true }));\n\t\t\t\t\t\t\tdispatch(setShowMenu(false));\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetResponseError(accessRestrictedMessage);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(setOnBoardingVisible(false));\n\t\t\t\t\t\tdispatch(setIsOnboarding(false));\n\t\t\t\t\t\tdispatch(setOnBoardingComplete(true));\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tonLoginSuccess?.(data);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: error => {\n\t\t\t\t\tconst extractedError = typeof error.data == 'string' ? error.data : error?.error ? error?.error : error?.data?.message;\n\t\t\t\t\tsetResponseError((error.status === 422 || extractedError === 'Not authenticated') ? 'Invalid user name or password, please try again.': extractedError );\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t},\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)} className={classNames(cls.host, className)} onClick={()=>setResponseError('')}>\n\t\t\t<div className={cls.row} app-variant=\"first-row\">\n\t\t\t\t<UserTextField autoComplete={rememberMe ? 'username' : 'new-password'} type=\"text\" placeholder={'Email or Username'} defaultValue={localStorage.getItem('username') ?? ''} {...register('email')}  />\n\t\t\t</div>\n\t\t\t<div className={cls.row} app-variant=\"second-row\">\n\t\t\t\t<PasswordTextField autoComplete={rememberMe ? 'on' : 'off'} placeholder={'Password'} defaultValue={localStorage.getItem('password') ?? ''} {...register('password')}  />\n\t\t\t</div>\n\t\t\t{(responseError || errors.password?.message || errors.email?.message) && <ErrorMessage>{`${responseError ?? ''} ${errors.password?.message ?? ''} ${errors.email?.message ?? ''} `}</ErrorMessage>}\n\t\t\t<Button\n\t\t\t\tdisabled={loading}\n\t\t\t\tloading={loading}\n\t\t\t\ttype={'submit'}\n\t\t\t\ttitle={'Sign in'}\n\t\t\t\tclassName={cls.signInButton}\n\t\t\t/>\n\t\t\t<div className={cls.row} app-variant=\"third-row\">\n\t\t\t\t<Checkbox defaultChecked={rememberMe} checkboxLabel={'Remember me'} {...register('rememberMe')} />\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t<p className={cls.recoverPasswordButton} onClick={onResetPassword}>{isMobile ? 'Forgot Password':'Need to find your password?'}</p>\n\t\t\t\t<br/>\n\t\t\t</div>\t\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t</form>\n\t);\n});\n","import { useEffect, memo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setOnBoardingComplete } from '../../reduxStore/actions/flowActions';\nimport cls from './Login.module.scss';\nimport { LoginForm } from './LoginForm/LoginForm';\nimport { isMobile, isSafari } from 'react-device-detect';\nimport { resetApplication } from '../../services/auth.service';\nimport { getMasterData, getMobileData } from '../../services/master.service';\nimport { store } from '../../reduxStore/store';\nimport { APP_NAME, FLOWHERO, uncachedUrl } from '../../shared/utility';\n\nconst Login = memo(props => {\n\tconst { title } = props;\n\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\tconst { companyData, lastUpdates } = store.getState().flowReducer;\n\tconst { authenticated } = store.getState().sessionReducer;\n\tconst [company,] = useState(JSON.parse(localStorage.getItem('companyData')) ?? { 'logo': '' });\n\tdocument.title = `Login | ${APP_NAME}`;\n\n\tuseEffect(() => {\n\t\tif (authenticated) {\n\t\t\tnavigate('/flowhero');\n\t\t} else {\n\t\t\tdispatch(setOnBoardingComplete(false));\n\t\t\tresetApplication();\n\t\t}\n\t}, []);\n\n\treturn authenticated == false ? (\n\t\t<div className={cls.host} app-custom-media-show=\"hide\">\n\t\t\t<div className={cls.firstContainer}>\n\t\t\t\t<p\n\t\t\t\t\tonClick={() => navigate('/flowhero')}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\tfontFamily: 'var(--app-text-main-font)',\n\t\t\t\t\t\tcolor: '#4A4A4A',\n\t\t\t\t\t\ttextDecoration: 'underline',\n\t\t\t\t\t\tpaddingLeft: '10px',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{'Home'}\n\t\t\t\t</p>\n\t\t\t\t<div className={cls.headerTopBarContainer} style={{ fontSize: isMobile ? '12px' : '18px' }}>\n\t\t\t\t\t{!company?.logo && <p>{company?.display_name?.toUpperCase()}</p>}\n\t\t\t\t\t{company?.logo ?\n\t\t\t\t\t\t<img alt=\"lg\" src={company?.logo} className={isMobile ? cls.logoUrlImgMobile : cls.logoUrlImg} />\n\t\t\t\t\t\t:\n\t\t\t\t\t\tisMobile ? FLOWHERO('30px') :\n\t\t\t\t\t\t\tFLOWHERO('40px')}\n\t\t\t\t</div>\n\t\t\t\t<div className={cls.firstContainerContent} style={{ smarginTop: '40px', border: isMobile ? '0' : '', width: isMobile ? '70%' : '25%' }}>\n\t\t\t\t\t<LoginForm\n\t\t\t\t\t\tonLoginSuccess={data => {\n\t\t\t\t\t\t\tconst { isSingleApp } = data;\n\n\t\t\t\t\t\t\tlastUpdates.componentsByModule = {};\n\n\t\t\t\t\t\t\tif (!(companyData?.status === 'trial_ended' || companyData?.status === 'inactive')) {\n\t\t\t\t\t\t\t\tif (isSingleApp === true && isMobile) {\n\t\t\t\t\t\t\t\t\tgetMobileData();\n\t\t\t\t\t\t\t\t\tnavigate('/mobile');\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tgetMasterData();\n\t\t\t\t\t\t\t\t\t// getMobileData();\n\t\t\t\t\t\t\t\t\t// navigate('/mobile');\n\t\t\t\t\t\t\t\t\t// return;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (companyData?.status === 'inactive') {\n\t\t\t\t\t\t\t\tgetMasterData(true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnavigate('/login');\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnavigate('/');\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonResetPassword={() => navigate('/reset-password')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<div style={{ margin: 'auto', width: '100%', height: '500px', display: 'flex', alignContent: 'center', alignItems: 'center', justifyItems: 'center', justifyContent: 'center' }}>{FLOWHERO('30px')}</div>\n\t);\n});\n\nexport default Login;\n"],"names":["yupPassword","yup","forwardRef","props","ref","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","React","createElement","UserTextField","_extends","type","rightButtonLabel","rightButtonAction","c","rightButtonClass","accessRestrictedMessage","concat","APP_NAME","LoginForm","memo","_localStorage$getItem","_localStorage$getItem2","_errors$password","_errors$email","_errors$password$mess","_errors$password2","_errors$email$message","_errors$email2","onLoginSuccess","className","onResetPassword","dispatch","useDispatch","rememberMe","useSelector","reduxStore","authReducer","sessionSettings","loading","setLoading","_useState3","_useState4","responseError","setResponseError","_useValidation","useMemo","schemas","email","min","password","passwordRepeat","oneOf","required","website","url","phoneNumber","test","name","message","value","arguments","length","undefined","isValidPhoneNumber","mobilePhoneNumber","employerName","_useForm","useForm","mode","criteriaMode","resolver","yupResolver","object","shape","register","handleSubmit","errors","formState","getValues","onSubmit","_data","_getValues","userLogin","pipe","take","subscribe","next","data","is_admin","onboarding_status","setOnBoardingVisible","setIsOnboarding","setOnBoardingModalsVisibility","firstModalVisible","setShowMenu","setOnBoardingComplete","error","_error$data","extractedError","status","classNames","cls","onClick","autoComplete","placeholder","defaultValue","localStorage","getItem","PasswordTextField","ErrorMessage","Button","disabled","title","Checkbox","defaultChecked","checkboxLabel","isMobile","_JSON$parse","_company$display_name","navigate","useNavigate","_store$getState$flowR","store","flowReducer","companyData","lastUpdates","authenticated","sessionReducer","JSON","parse","company","document","useEffect","resetApplication","style","cursor","fontFamily","color","textDecoration","paddingLeft","fontSize","logo","display_name","toUpperCase","alt","src","FLOWHERO","smarginTop","border","width","isSingleApp","componentsByModule","getMobileData","getMasterData","margin","height","display","alignContent","alignItems","justifyItems","justifyContent"],"sourceRoot":""}