{"version":3,"file":"static/js/237.bfb20f7d.chunk.js","mappings":"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","sources":["appFiles/components/Home/sub/AppointmentForm.js","appFiles/components/Home/Pages/Appointment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../../../styles/AppointmentForm.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { COMPANY_NAME } from '../../../shared/utility';\n\nfunction AppointmentForm() {\n\tuseEffect(() => {\n\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t});\n\n\tconst [patientName, setPatientName] = useState('');\n\tconst [patientNumber, setPatientNumber] = useState('');\n\tconst [patientGender, setPatientGender] = useState('default');\n\tconst [appointmentTime, setAppointmentTime] = useState('');\n\tconst [preferredMode, setPreferredMode] = useState('default');\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [formErrors, setFormErrors] = useState({});\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\t// Validate form inputs\n\t\tconst errors = {};\n\t\tif (!patientName.trim()) {\n\t\t\terrors.patientName = 'Name is required';\n\t\t} else if (patientName.trim().length < 8) {\n\t\t\terrors.patientName = 'Name must be at least 8 characters';\n\t\t}\n\n\t\tif (!patientNumber.trim()) {\n\t\t\terrors.patientNumber = 'Phone number is required';\n\t\t} else if (patientNumber.trim().length < 10) {\n\t\t\terrors.patientNumber = 'Phone number must be of 10 digits';\n\t\t}\n\n\t\tif (preferredMode === 'default') {\n\t\t\terrors.preferredMode = 'Please select preferred mode';\n\t\t}\n\n\t\tif (Object.keys(errors).length > 0) {\n\t\t\tsetFormErrors(errors);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset form fields and errors after successful submission\n\t\tsetPatientName('');\n\t\tsetPatientNumber('');\n\t\tsetPatientGender('default');\n\t\tsetAppointmentTime('');\n\t\tsetPreferredMode('default');\n\t\tsetFormErrors({});\n\n\t\ttoast.success('Appointment Scheduled !', {\n\t\t\tposition: toast.POSITION.TOP_CENTER,\n\t\t\tonOpen: () => setIsSubmitted(true),\n\t\t\tonClose: () => setIsSubmitted(false),\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"appointment-form-section\" style={{ fontFamily: 'var(--app-text-main-font), serif' }}>\n\t\t\t<Link to=\"/\">{`Home`}</Link>\n\n\t\t\t<div className=\"form-container\">\n\t\t\t\t<h2 className=\"form-title\">\n\t\t\t\t\t<span>Book Appointment Online</span>\n\t\t\t\t</h2>\n\n\t\t\t\t<form className=\"form-content\" onSubmit={handleSubmit}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tFull Name:\n\t\t\t\t\t\t<input type=\"text\" value={patientName} onChange={e => setPatientName(e.target.value)} required />\n\t\t\t\t\t\t{formErrors.patientName && <p className=\"error-message\">{formErrors.patientName}</p>}\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<label>\n\t\t\t\t\t\tPhone Number:\n\t\t\t\t\t\t<input type=\"text\" value={patientNumber} onChange={e => setPatientNumber(e.target.value)} required />\n\t\t\t\t\t\t{formErrors.patientNumber && <p className=\"error-message\">{formErrors.patientNumber}</p>}\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<label>\n\t\t\t\t\t\tPreferred Mode:\n\t\t\t\t\t\t<select value={preferredMode} onChange={e => setPreferredMode(e.target.value)} required>\n\t\t\t\t\t\t\t<option value=\"default\">Select</option>\n\t\t\t\t\t\t\t<option value=\"voice\">Voice Call</option>\n\t\t\t\t\t\t\t<option value=\"video\">Video Call</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t{formErrors.preferredMode && <p className=\"error-message\">{formErrors.preferredMode}</p>}\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<button type=\"submit\" className=\"text-appointment-btn\">\n\t\t\t\t\t\tConfirm\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<p className=\"success-message\" style={{ display: isSubmitted ? 'block' : 'none' }}>\n\t\t\t\t\t\tDetails has been sent.\n\t\t\t\t\t</p>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<ToastContainer autoClose={5000} limit={1} closeButton={false} />\n\t\t</div>\n\t);\n}\n\nexport default AppointmentForm;\n","import React from 'react';\nimport AppointmentForm from '../sub/AppointmentForm';\n\nfunction Appointment() {\n\treturn <AppointmentForm />;\n}\n\nexport default Appointment;\n"],"names":["useEffect","window","scrollTo","top","behavior","_useState","useState","_useState2","_slicedToArray","patientName","setPatientName","_useState3","_useState4","patientNumber","setPatientNumber","_useState5","_useState6","setPatientGender","_useState7","_useState8","setAppointmentTime","_useState9","_useState10","preferredMode","setPreferredMode","_useState11","_useState12","isSubmitted","setIsSubmitted","_useState13","_useState14","formErrors","setFormErrors","React","className","style","fontFamily","Link","to","onSubmit","e","preventDefault","errors","trim","length","Object","keys","toast","position","onOpen","onClose","type","value","onChange","target","required","display","ToastContainer","autoClose","limit","closeButton","AppointmentForm"],"sourceRoot":""}